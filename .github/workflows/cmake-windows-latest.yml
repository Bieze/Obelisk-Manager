name: CMake Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - name: Setup MSYS2
    # You may pin to the exact commit or the version.
    # uses: msys2/setup-msys2@d40200dc2db4c351366b048a9565ad82919e1c24
      uses: msys2/setup-msys2@v2

    - name: Install boost
      uses: MarkusJx/install-boost@v2.4.1
      id: install-boost
      with:
        boost_version: 1.80.0

    - uses: actions/checkout@v3
      with:
        submodules: recursive


    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: mkdir build && cd build && cmake .. -G "MSYS Makefiles"

    - name: Build progarm
      # Build your program with the given configuration
      run: cd build && cmake --build .

    - name: Post-build tests
      run: cd build && ctest -j14 -C Debug -T test --output-on-failure


